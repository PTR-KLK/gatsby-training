{"version":3,"sources":["webpack:///./src/styles/portfolio.style.js","webpack:///./src/pages/portfolio.js"],"names":["StyledListItem","rhythm","colors","primary","light","accent","dark","StyledLink","ExternalLink","StyledFooter","StyledCircle","props","color","StyledBioSection","StyledBioImg","StyledInfoSection","StyledList","StyledHr","Project","element","lastNode","console","log","node","name","description","repositoryTopics","nodes","length","map","e","key","topic","href","url","target","rel","size","pushedAt","slice","replace","primaryLanguage","homepageUrl","Portfolio","data","githubData","user","avatarUrl","login","isHireable","repositories","heroDescription","src","alt","edges","idx","arr","query"],"mappings":"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","file":"component---src-pages-portfolio-js-051a97c7244119d606ee.js","sourcesContent":["import styled from \"@emotion/styled\"\nimport { rhythm } from \"../utils/typography\"\nimport { ExternalLink } from \"./links.style\"\nimport { colors } from \"../utils/theme\"\n\nexport const StyledListItem = styled.li`\n  margin: 0;\n\n  & section {\n    width: 100%;\n    padding: ${rhythm(1 / 2)};\n\n    & h3 {\n      text-transform: capitalize;\n    }\n\n    & ul {\n      list-style: none;\n      margin: 0;\n      display: flex;\n      flex-wrap: wrap;\n      align-items: center;\n\n      & li {\n        margin: 0 ${rhythm(1 / 4)} ${rhythm(1 / 4)} 0;\n        padding: ${rhythm(1 / 16)} ${rhythm(1 / 8)};\n        border-radius: ${rhythm(1 / 4)};\n        background: ${colors.primary};\n        color: ${colors.light};\n\n        & p {\n          align-self: center;\n        }\n        \n        &:hover, &:hover a {\n          background: ${colors.accent};\n          color: ${colors.dark};\n        }\n      }\n    }\n\n    & h3,\n    > p:first-of-type,\n    hr {\n      margin-bottom: ${rhythm(1 / 4)};\n    }\n\n    & > * {\n      margin-bottom: 0;\n    }\n\n    @media (min-width: 768px) {\n      padding: ${rhythm(1)};\n    }\n  }\n`\n\nexport const StyledLink = styled(ExternalLink)`\n  display: flex;\n  align-items: center;\n  margin: 0 0 ${rhythm(1 / 4)} 0;\n    \n    @media (min-width: 768px) {\n      margin: 0;\n    }\n`\n\nexport const StyledFooter = styled.footer`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n\n  & p {\n    margin: 0 0 0 ${rhythm(1 / 4)};\n    align-self: center;\n\n    @media (min-width: 768px) {\n      margin: 0 ${rhythm(1 / 2)} 0 ${rhythm(1 / 4)};\n    }\n  }\n\n  & span {\n    display: flex;\n    margin: 0 0 ${rhythm(1 / 4)} 0;\n\n    @media (min-width: 768px) {\n      margin: 0;\n    }\n  }\n`\n\nexport const StyledCircle = styled.span`\n  border-radius: 50%;\n  display: inline-block;\n  align-self: center;\n  height: 24px;\n  position: relative;\n  margin: 0;\n  top: 1px;\n  width: 24px;\n  background-color: ${props => props.color};\n`\n\nexport const StyledBioSection = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  @media (min-width: 425px) {\n    flex-direction: row;\n  }\n`\n\nexport const StyledBioImg = styled.img`\n  width: ${rhythm(5)};\n  height: ${rhythm(5)};\n  border-radius: 50%;\n  margin: 0 ${rhythm(1)} 0 0;\n\n  @media (min-width: 1440px) {\n    width: ${rhythm(7.5)};\n    height: ${rhythm(7.5)};\n    margin: ${rhythm(1)};\n  }\n\n  @media (min-width: 2560px) {\n    width: ${rhythm(15)};\n    height: ${rhythm(15)};\n    margin: ${rhythm(2)};\n  }\n`\n\nexport const StyledInfoSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  & > * {\n    margin: 0;\n  }\n`\nexport const StyledList = styled.ul`\n  list-style: none;\n  margin: 0;\n`\n\nexport const StyledHr = styled.hr`\n  border-bottom: 1px solid ${colors.dark};\n  margin: 0;\n`\n","import React from \"react\"\nimport Layout from \"../components/layout.component\"\nimport { graphql } from \"gatsby\"\nimport {\n  TopicIcon,\n  ExternalLinkIcon,\n  ExternalSiteIcon,\n  UpdatedIcon,\n} from \"../styles/icons.style\"\nimport { ExternalLink } from \"../styles/links.style\"\nimport {\n  StyledListItem,\n  StyledLink,\n  StyledFooter,\n  StyledCircle,\n  StyledBioSection,\n  StyledBioImg,\n  StyledInfoSection,\n  StyledList,\n  StyledHr,\n} from \"../styles/portfolio.style\"\n\nfunction Project({ element, lastNode }) {\n  console.log(element)\n  return (\n    <StyledListItem>\n      <section>\n        <h3>{element.node.name}</h3>\n        <StyledHr />\n        {element.node.description ? <p>{element.node.description}</p> : null}\n        {element.node.repositoryTopics.nodes.length > 0 ? (\n          <ul>\n            {element.node.repositoryTopics.nodes.map(e => (\n              <li key={e.topic.name}>\n                <StyledLink\n                  href={e.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <TopicIcon size={12} />\n                  <p>{e.topic.name}</p>\n                </StyledLink>\n              </li>\n            ))}\n          </ul>\n        ) : null} \n        <StyledFooter>\n          <span>\n            <UpdatedIcon size={24} />\n            <p>{element.node.pushedAt.slice(0, 10).replace(/-/g, \"/\")}</p>\n          </span>\n          <span>\n            <StyledCircle color={element.node.primaryLanguage.color} />\n            <p>{element.node.primaryLanguage.name}</p>\n          </span>\n          <StyledLink\n            href={element.node.url}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <ExternalLinkIcon size={24} />\n            <p>Repo</p>\n          </StyledLink>\n          {element.node.homepageUrl ? (\n            <StyledLink\n              href={element.node.homepageUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <ExternalSiteIcon size={24} />\n              <p>Demo</p>\n            </StyledLink>\n          ) : null}\n        </StyledFooter>\n      </section>\n\n      {lastNode ? null : <hr />}\n    </StyledListItem>\n  )\n}\n\nexport default function Portfolio({ data }) {\n  const {\n    url,\n    avatarUrl,\n    name,\n    login,\n    isHireable,\n    repositories,\n  } = data.githubData.data.user\n\n  const heroDescription = (\n    <ExternalLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n      <StyledBioSection>\n        <StyledBioImg src={avatarUrl} alt=\"Just me\" />\n        <StyledInfoSection>\n          <h1>{name}</h1>\n          <p>{login}</p>\n          {isHireable ? <p>I'm Hireable</p> : null}\n        </StyledInfoSection>\n      </StyledBioSection>\n    </ExternalLink>\n  )\n\n  return (\n    <Layout heroDescription={heroDescription}>\n      <StyledList>\n        {repositories.edges.map((e, idx, arr) => (\n          <Project\n            key={e.node.name}\n            element={e}\n            lastNode={idx === arr.length - 1}\n          />\n        ))}\n      </StyledList>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    githubData {\n      data {\n        user {\n          url\n          avatarUrl\n          isHireable\n          name\n          login\n          repositories {\n            edges {\n              node {\n                name\n                url\n                homepageUrl\n                repositoryTopics {\n                  nodes {\n                    url\n                    topic {\n                      name\n                    }\n                  }\n                }\n                description\n                pushedAt\n                primaryLanguage {\n                  color\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}